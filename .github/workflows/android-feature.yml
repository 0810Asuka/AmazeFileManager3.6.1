name: Android Feature CI

on:
  pull_request:
    branches:
      - 'master'
      - 'release/*'
      - 'hotfix/*'

concurrency:
  group: build-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  check_spotless:
    name: Check spotless
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          distribution: "temurin"
          java-version: 11
          cache: 'gradle'
      - name: Check formatting using spotless
        run: ./gradlew spotlessCheck --stacktrace
  build:
    name: Build debug and run Jacoco tests
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          distribution: "temurin"
          java-version: 11
          cache: 'gradle'
      - name: Build with Gradle
        run: |
          ./gradlew assembledebug --stacktrace
      - name: Run test cases
        run: ./gradlew jacocoTestPlayDebugUnitTestReport --stacktrace --info
  test_emulator:
    runs-on: macos-latest
    strategy:
      matrix:
        api-level: [22]#[16, 19, 28]
    steps:
      - name: checkout
        uses: actions/checkout@v2
      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          distribution: "temurin"
          java-version: 11
          cache: 'gradle'
      - name: Gradle cache
        uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: gradle-${{ runner.os }}-${{ hashFiles('**/*.gradle*') }}-${{ hashFiles('**/gradle/wrapper/gradle-wrapper.properties') }}-${{ hashFiles('**/buildSrc/**/*.kt') }}

      - name: AVD cache
        uses: actions/cache@v2
        id: avd-cache
        with:
          path: |
            ~/.android/avd/*
            ~/.android/adb*
          key: avd-${{ matrix.api-level }}

      - name: create AVD and generate snapshot for caching
        if: steps.avd-cache.outputs.cache-hit != 'true'
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: ${{ matrix.api-level }}
          force-avd-creation: false
          emulator-options: -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none
          disable-animations: false
          script: echo "Generated AVD snapshot for caching."

      - name: run tests
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: ${{ matrix.api-level }}
          force-avd-creation: false
          emulator-options: -no-snapshot-save -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none
          disable-animations: true
          script: ./gradlew :app:connectedCheck
